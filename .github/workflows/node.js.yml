name: Build

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        run: npm ci
      - name: Test
        run: npm run ci:test
      ##- name: Dev deployment
      ##  run: npm run starlay:evm:dev:migration
      ##- name: Astar deployment at Astar fork
      ##  run: npm run starlay:fork:main
      ##  env:
      ##    ALCHEMY_KEY: ${{ secrets.ALCHEMY_KEY }}
      # - name: Coverage
      #   run: npm run coverage
      # - uses: codecov/codecov-action@v1
      #   with:
      #     fail_ci_if_error: true
      - name: prepare
        id: prepare
        shell: bash
        if: |
          github.ref == 'refs/heads/main' &&
          !contains(github.event.head_commit.message, 'chore(release)')
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc
          git config user.name "GitHub Actions Build"
          git config user.email "contact@starlay.finance"
      - id: release
        name: release
        if: |
          github.ref == 'refs/heads/main' &&
          !contains(github.event.head_commit.message, 'chore(release)')
        run: |
          - npm ci
          - echo //registry.npmjs.org/:_authToken=${NPM_V2_PACKAGES_TOKEN} > .npmrc
          - npm run compile
          - ${VERSION}
          - npm publish --access public
